app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: https://backstage.apps.dev-shared-services.projectcroatia.cloud

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: https://backstage.apps.dev-shared-services.projectcroatia.cloud
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen: '0.0.0.0:7007'

  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      host: ${PGHOST}
      port: ${PGPORT}
      user: ${PGUSER}
      password: ${PGPASSWORD}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt

techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'local' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

integrations:
  bitbucketServer:
    - host: bitbucket.projectcroatia.cloud
      apiBaseUrl: https://bitbucket.projectcroatia.cloud/rest/api/1.0
      token: ${BITBUCKET_TOKEN}

catalog:
  rules:
    - allow: [Component, System, API, Resource, Location]
  providers:
    bitbucketServer:
      croatia: # identifies your ingested dataset
        host: bitbucket.projectcroatia.cloud
        catalogPath: /catalog-info.yaml # default value
        schedule: # optional; same options as in TaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 30 }
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 3 }

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: https://api.development.projectcroatia.cloud:6443
          name: Development
          authProvider: 'serviceAccount'
          skipTLSVerify: false
          skipMetricsLookup: true
          serviceAccountToken: ${DEVELOPMENT_SERVICE_ACCOUNT_TOKEN}
          caData: ${DEVELOPMENT_CA}
