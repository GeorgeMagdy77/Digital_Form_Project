apiVersion: v1
kind: ServiceAccount
metadata:
  name: restart-deployments
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "-2"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: restart-deployments
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "-2"
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: restart-deployments
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "-1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: restart-deployments
subjects:
- kind: ServiceAccount
  name: restart-deployments
---
apiVersion: batch/v1
kind: Job
metadata:
  name: restart-deployments
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 300
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: restart-deployments
      automountServiceAccountToken: true
      restartPolicy: OnFailure
      containers:
        - name: job
          image: artifactory.apps.dev-nonpci-shared.npnbank.local/docker/bitnami/kubectl:1.24.8
          command:
          - /bin/sh
          - -c
          - |
            DEPLOYMENTS=$(kubectl -n alpha get deployments -l "alphaEnvironmentConfiguration=true" -o jsonpath="{.items[*].metadata.name}")
            for DEPLOYMENT in $DEPLOYMENTS; do
              kubectl -n alpha rollout restart deployments ${DEPLOYMENT}
            done