---
apiVersion: machine.openshift.io/v1beta1
kind: MachineSet
metadata:
  labels:
    machine.openshift.io/cluster-api-cluster: san-sandbox
  name: worker-highmem
  namespace: openshift-machine-api
spec:
  replicas: 2
  selector:
    matchLabels:
      machine.openshift.io/cluster-api-cluster: san-sandbox
      machine.openshift.io/cluster-api-machineset: san-sandbox-worker-highmem
  template:
    metadata:
      creationTimestamp: null
      labels:
        machine.openshift.io/cluster-api-cluster: san-sandbox
        machine.openshift.io/cluster-api-machine-role: worker
        machine.openshift.io/cluster-api-machine-type: worker
        machine.openshift.io/cluster-api-machineset: san-sandbox-worker-highmem
    spec:
      providerSpec:
        value:
          apiVersion: vsphereprovider.openshift.io/v1beta1
          credentialsSecret:
            name: vsphere-cloud-credentials
          diskGiB: 120
          kind: VSphereMachineProviderSpec
          memoryMiB: 32000
          metadata:
            creationTimestamp: null
          network:
            devices:
            - networkName: san-sandbox
          numCPUs: 8
          numCoresPerSocket: 1
          snapshot: ""
          userDataSecret:
            name: worker-user-data
          template: san-sandbox-gbp2k-rhcos
          workspace:
            datacenter: oci-w01dc
            datastore: vsanDatastore
            folder: /oci-w01dc/vm/san-sandbox-gbp2k
            server: vcenter-sandbox.sddc.jed.oci.oraclecloud.com
            resourcePool: /oci-w01dc/host/oci01-w01-consolidated01/Resources

---
apiVersion: "logging.openshift.io/v1"
kind: "ClusterLogging"
metadata:
  name: "instance"
  namespace: openshift-logging
spec:
  collection:
    logs:
      fluentd: {}
      type: "fluentd"
  logStore:
    type: "elasticsearch"
    elasticsearch:
      nodeCount: 3
      storage:
        size: "1000G"
        storageClassName: "thin"
      redundancyPolicy: "SingleRedundancy"
      resources: 
        limits:
          memory: 10Gi
        requests:
          cpu: 500m
          memory: 8Gi
  visualization:
    kibana:
      proxy:
        resources: 
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
      replicas: 2
      resources: 
        limits:
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500Mi
    type: "kibana"
