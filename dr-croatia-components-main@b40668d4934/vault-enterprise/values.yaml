global:
  enabled: true
  tlsDisable: false
  openshift: true  
  ui:
    enabled: true
server:
  shareProcessNamespace: true
  extraContainers:
  - name: fluentd
    env:
    - name: FLUENT_UID
      value: root
    - name: FLUENT_CONF
      value: fluent.conf
    - name: FLUENTD_ARGS
      value: -c /fluentd/etc/fluent.conf
    image: artifactory.apps.prod-nonpci-shared.nrapp.cloud/docker-local/splunk/fluentd-hec:1.3.2
    volumeMounts:
    - name: vault-audit
      mountPath: /vault/audit/
    - name:  fdconf
      mountPath: /fluentd/etc/
  - name: telegraf
    image: artifactory.apps.prod-nonpci-shared.nrapp.cloud/docker-remote/telegraf:1.26.1
    volumeMounts:
    - name: telegrafconf
      mountPath: /etc/telegraf/
  route:
    enabled: true
 
    # When HA mode is enabled and K8s service registration is being used,
    # configure the route to point to the Vault active service.
    activeService: true
 
    labels: {}
    annotations: {}
    host: vault-dr.apps.dr-nonpci-appdb.nbank.local
    # tls will be passed directly to the route's TLS config, which
    # can be used to configure other termination methods that terminate
    # TLS at the router
    tls:
      termination: passthrough 
      insecureEdgeTerminationPolicy: None
  dataStorage:
    enabled: true
    size: 12Gi
  auditStorage:
    enabled: true
    size: 5Gi
  image:
    repository: artifactory.apps.prod-nonpci-shared.nrapp.cloud/docker-local/hashicorp/vault-enterprise
    tag: 1.15.5-ent
  enterpriseLicense:
    secretName: vault-ent-license
  ha:
    enabled: true
    replicas: 3
    apiAddr: "https://vault-dr.apps.dr-nonpci-appdb.nbank.local"
    #clusterAddr: "https://vault-ha-internal.apps.prod-isva.nrapp.cloud"
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui=true
        cluster_name = "vault-ha"
        log_level = "trace" 
        listener "tcp" {
        tls_disable = 0
        address = "[::]:8200"
        cluster_address = "[::]:8201"
        tls_cert_file = "/vault/userconfig/vault-ha-tls/tls.crt"
        tls_key_file  = "/vault/userconfig/vault-ha-tls/tls.key"
        tls_client_ca_file = "/vault/userconfig/vault-ha-tls/ca.crt"
        }
        storage "raft" {
          path = "/vault/data"
        }
        telemetry {
        dogstatsd_addr                 = "127.0.0.1:8125"
        enable_hostname_label          = true
        disable_hostname               = true
        enable_high_cardinality_labels = "*"
        }
        service_registration "kubernetes" {}    
  extraEnvironmentVars: 
    VAULT_CACERT: /vault/userconfig/vault-ha-tls/ca.crt
    VAULT_TLSCERT: /vault/userconfig/vault-ha-tls/tls.crt
    VAULT_TLSKEY: /vault/userconfig/vault-ha-tls/tls.key
  volumes: 
    - name: userconfig-vault-ha-tls 
      secret: 
        defaultMode: 420 
        secretName: vault-ha-tls # Matches the ${SECRET_NAME} from above
    - name: fdconf
      configMap:
        name: fluentd
    - name: telegrafconf
      configMap:
        name: telegraf
    - name: vault-audit
      emptyDir: {}
  volumeMounts: 
    - mountPath: /vault/userconfig/vault-ha-tls 
      name: userconfig-vault-ha-tls 
      readOnly: true
    - name: vault-audit
      mountPath: /vault/audit/

injector:
  # image sets the repo and tag of the vault-k8s image to use for the injector.
  image:
    repository: artifactory.apps.prod-nonpci-shared.nrapp.cloud/docker-local/hashicorp/vault-k8s
    tag: 1.3.1