/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/8.0.1/samples
 */

plugins {
    id "groovy"
}

group = "com.croatia"
version = "1.0.0"

repositories {
  maven { url 'https://repo1.maven.org/maven2/' }
  maven { url 'https://repo.jenkins-ci.org/releases/' }
  maven { url 'https://repo.jenkins-ci.org/public/' }
}

configurations {
  testPlugins {}
}

dependencies {
  implementation "org.codehaus.groovy:groovy-all:3.0.16"
  implementation "org.codehaus.groovy:groovy-dateutil:3.0.16"
  testImplementation "com.lesfurets:jenkins-pipeline-unit:1.17"
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.2"
  testImplementation "org.jenkins-ci.plugins:job-dsl-core:1.82"
  testImplementation "org.spockframework:spock-core:2.4-M1-groovy-3.0"

  // testPlugins 'io.jenkins.plugins:atlassian-bitbucket-server-integration:3.3.2'
}

task resolveTestPlugins(type: Copy) {
    from configurations.testPlugins
    into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
    include '*.hpi'
    include '*.jpi'
    def mapping = [:]

    doFirst {
        configurations.testPlugins.resolvedConfiguration.resolvedArtifacts.each {
            mapping[it.file.name] = "${it.name}.${it.extension}"
        }
    }
    rename { mapping[it] }

    doLast {
        List<String> baseNames = source*.name.collect { mapping[it] }.collect { it[0..it.lastIndexOf('.') - 1] }
        new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
    }
}

test {
  dependsOn tasks.resolveTestPlugins
  useJUnitPlatform()
}

sourceSets {
  main {
    groovy {
      srcDirs = ['library/src', 'tactical/library/src']
    }
  }
  test {
    groovy {
      srcDirs = ['test', 'tactical/test']
    }
  }
}
